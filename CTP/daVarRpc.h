/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _DAVARRPC_H_RPCGEN
#define _DAVARRPC_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif

#include <time.h>
#define _xdr_result xdr_result
#define _xdr_argument xdr_argument
#define DAVARINT_RPC 1
#define DAVARFLOAT_RPC 2
#define DAVARDOUBLE_RPC 3
#define DAVARSTRING_RPC 4
#define DAVARERROR_RPC 999

typedef char *PNAME;

typedef struct {
	u_int NAMELIST_len;
	PNAME *NAMELIST_val;
} NAMELIST;

struct any {
	int valtype;
	union {
		struct {
			u_int i_len;
			int *i_val;
		} i;
		struct {
			u_int r_len;
			float *r_val;
		} r;
		struct {
			u_int d_len;
			double *d_val;
		} d;
		char *s;
		int error;
	} any_u;
};
typedef struct any any;

struct wany {
	PNAME name;
	any *val;
};
typedef struct wany wany;

typedef struct {
	u_int RVALLIST_len;
	any *RVALLIST_val;
} RVALLIST;

typedef struct {
	u_int WVALLIST_len;
	wany *WVALLIST_val;
} WVALLIST;

typedef struct {
	u_int ERRLIST_len;
	int *ERRLIST_val;
} ERRLIST;

struct TESTNAMELIST {
	char *test_condition;
	int max_time_wait;
	int max_event_wait;
	int prog;
	int vers;
	NAMELIST *NAMELISTP;
};
typedef struct TESTNAMELIST TESTNAMELIST;

#define DAVARSVR 0x2c0daFF8
#define DAVARVERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define DAVAR_ACKMESSAGE 101
extern  int * davar_ackmessage_1(char **, CLIENT *);
extern  int * davar_ackmessage_1_svc(char **, struct svc_req *);
#define DAVAR_GETLIST 102
extern  NAMELIST * davar_getlist_1(char **, CLIENT *);
extern  NAMELIST * davar_getlist_1_svc(char **, struct svc_req *);
#define DAVAR_READMULTIPLE 103
extern  RVALLIST * davar_readmultiple_1(NAMELIST *, CLIENT *);
extern  RVALLIST * davar_readmultiple_1_svc(NAMELIST *, struct svc_req *);
#define DAVAR_WRITEMULTIPLE 104
extern  ERRLIST * davar_writemultiple_1(WVALLIST *, CLIENT *);
extern  ERRLIST * davar_writemultiple_1_svc(WVALLIST *, struct svc_req *);
#define DAVAR_READMULTIPLE_TEST 105
extern  int * davar_readmultiple_test_1(TESTNAMELIST *, CLIENT *);
extern  int * davar_readmultiple_test_1_svc(TESTNAMELIST *, struct svc_req *);
#define DAVAR_READMULTIPLE_TEST_CB 106
extern  int * davar_readmultiple_test_cb_1(RVALLIST *, CLIENT *);
extern  int * davar_readmultiple_test_cb_1_svc(RVALLIST *, struct svc_req *);
#define DAVAR_READPATTERNMATCH 107
extern  WVALLIST * davar_readpatternmatch_1(char **, CLIENT *);
extern  WVALLIST * davar_readpatternmatch_1_svc(char **, struct svc_req *);
extern int davarsvr_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define DAVAR_ACKMESSAGE 101
extern  int * davar_ackmessage_1();
extern  int * davar_ackmessage_1_svc();
#define DAVAR_GETLIST 102
extern  NAMELIST * davar_getlist_1();
extern  NAMELIST * davar_getlist_1_svc();
#define DAVAR_READMULTIPLE 103
extern  RVALLIST * davar_readmultiple_1();
extern  RVALLIST * davar_readmultiple_1_svc();
#define DAVAR_WRITEMULTIPLE 104
extern  ERRLIST * davar_writemultiple_1();
extern  ERRLIST * davar_writemultiple_1_svc();
#define DAVAR_READMULTIPLE_TEST 105
extern  int * davar_readmultiple_test_1();
extern  int * davar_readmultiple_test_1_svc();
#define DAVAR_READMULTIPLE_TEST_CB 106
extern  int * davar_readmultiple_test_cb_1();
extern  int * davar_readmultiple_test_cb_1_svc();
#define DAVAR_READPATTERNMATCH 107
extern  WVALLIST * davar_readpatternmatch_1();
extern  WVALLIST * davar_readpatternmatch_1_svc();
extern int davarsvr_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_PNAME (XDR *, PNAME*);
extern  bool_t xdr_NAMELIST (XDR *, NAMELIST*);
extern  bool_t xdr_any (XDR *, any*);
extern  bool_t xdr_wany (XDR *, wany*);
extern  bool_t xdr_RVALLIST (XDR *, RVALLIST*);
extern  bool_t xdr_WVALLIST (XDR *, WVALLIST*);
extern  bool_t xdr_ERRLIST (XDR *, ERRLIST*);
extern  bool_t xdr_TESTNAMELIST (XDR *, TESTNAMELIST*);

#else /* K&R C */
extern bool_t xdr_PNAME ();
extern bool_t xdr_NAMELIST ();
extern bool_t xdr_any ();
extern bool_t xdr_wany ();
extern bool_t xdr_RVALLIST ();
extern bool_t xdr_WVALLIST ();
extern bool_t xdr_ERRLIST ();
extern bool_t xdr_TESTNAMELIST ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_DAVARRPC_H_RPCGEN */
